// Copyright (C) 2009-2016 ETH Zurich
// Copyright (C) 2007?-2016 Center for Nanophase Materials Sciences, ORNL
// All rights reserved.
//
// See LICENSE.txt for terms of usage.
// See CITATION.txt for citation guidelines if you use this code for scientific publications.
//
// Author: John Biddiscombe (john.biddiscombe@cscs.ch)
//         Urs R. Haehner (haehneru@itp.phys.ethz.ch)
//
// This is a CMake generated header file.
// It contains preprocessor definitions to configure the applications according to the options set
// via CMake.

#ifndef DCA_CONFIG_HPX_DEFINES_HPP
#define DCA_CONFIG_HPX_DEFINES_HPP

#include "dca/config/haves_defines.hpp"
#include "dca/config/config_defines.hpp"

#define DCA_HAVE_HPX_LOGGING 1

#if defined(DCA_HAVE_HPX)
# include <hpx/config/defines.hpp>
# if defined(DCA_HAVE_HPX_LOGGING) && !defined(NDEBUG)
//#  include <hpx/logging.hpp>
#  include <hpx/lcos/local/mutex.hpp>
#  include <mutex> // lock_guard
typedef std::mutex    log_mutex_type;
extern log_mutex_type log_mutex;
#  define DCA_LOG(msg) { std::lock_guard<log_mutex_type> lock(log_mutex); std::cout << "DEBUG " << msg << std::endl; }
# else
#  define DCA_LOG(msg)
# endif
#else
# define DCA_LOG(msg)
#endif

#endif  // DCA_CONFIG_CONFIG_DEFINES_HPP
